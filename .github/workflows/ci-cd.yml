name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Maven 3.9.2
        run: |
          wget https://archive.apache.org/dist/maven/maven-3/3.9.2/binaries/apache-maven-3.9.2-bin.tar.gz
          tar -xzf apache-maven-3.9.2-bin.tar.gz
          sudo mv apache-maven-3.9.2 /usr/local/apache-maven
          echo "MAVEN_HOME=/usr/local/apache-maven" >> $GITHUB_ENV
          echo "PATH=/usr/local/apache-maven/bin:$PATH" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean install

      - name: Dependency Scanning with Snyk
        uses: snyk/actions/maven@master
        with:
          args: --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Increment version
        id: version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          new_version=$(echo $version | awk -F. -v OFS=. '{$NF++; print}')
          mvn versions:set -DnewVersion=$new_version
          mvn versions:commit
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Commit new version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pom.xml
          git commit -m "Increment version to ${{ env.new_version }}"
          git push

      - name: Upload JAR to GitHub Packages
        uses: actions/upload-artifact@v2
        with:
          name: my-app-${{ env.new_version }}
          path: target/*.jar

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t idancohen355/simple-java-maven-app:${{ env.new_version }} .
          docker push idancohen355/simple-java-maven-app:${{ env.new_version }}

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key $EC2_USER@$EC2_HOST << EOF
            docker pull idancohen355/simple-java-maven-app:${{ env.new_version }}
            docker run -d --name simple-java-maven-app idancohen355/simple-java-maven-app:${{ env.new_version }}
          EOF
